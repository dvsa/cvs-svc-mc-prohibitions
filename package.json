{
  "name": "cvs-tsk-smc-prohibition",
  "version": "1.0.0",
  "description": "",
  "main": "src/handler.ts",
  "engines": {
    "node": "18.*",
    "npm": "8.*"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm-run-all security-checks prettier lint",
      "commit-msg": "commitlint $1",
      "pre-push": "npm-run-all build test"
    }
  },
  "scripts": {
    "start": "cross-env SEND_TO_SMC=true API_VERSION=${npm_package_version} NODE_ENV=local serverless offline start",
    "dev": "cross-env SLS_DEBUG=* concurrently \"npm start\" \"npm run test:unit:watch\"",
    "test:unit": "cross-env SEND_TO_SMC=true NODE_ENV=test API_VERSION=${npm_package_version} jest --runInBand",
    "test:unit:watch": "npm run test:unit -- --watch",
    "test:unit:coverage": "cross-env npm run test:unit -- --coverage",
    "test-i": "echo 'to be added: launch server' && npm run test:integration",
    "test:integration": "cross-env NODE_ENV=test echo 'integration tests to be added'",
    "test:integration:watch": "echo 'integration tests --watch to be added'",
    "test:integration:coverage": "cross-env echo 'integration tests coverage to be added'",
    "test": "npm-run-all test:unit:coverage test:integration:coverage",
    "audit": "npm audit --prod",
    "lint:analyse": "eslint . --ext js,ts --fix",
    "lint:report": "npm run lint:analyse -- -f json -o reports/eslint/eslint-report.json",
    "lint": "npm-run-all lint:*",
    "prettier": "prettier --write ./**/*.{js,ts}",
    "security-checks": "git secrets --scan && git log -p | scanrepo && snyk test --severity-threshold=high",
    "clean": "rimraf ./.build ./.artifact ./.serverless ./.webpack ./*.zip",
    "compile": "tsc",
    "build": "tsc --rootDir ./ --outDir .build --sourceMap false && npm run build:copy && rimraf .build/tests",
    "build:copy": "find src -type f \\( -name \"*.yml\" -or -name \"*.json\" \\) | cpio -pdm .build && find tests -type f \\( -name \"*.yml\" -or -name \"*.json\" \\)  | cpio -pdm .build",
    "sonar-scanner": "sonar-scanner",
    "package": "mkdir ${ZIP_NAME} && cp package.json package-lock.json ${ZIP_NAME}/ && cp -r .build/src/* ${ZIP_NAME}/ && cd ${ZIP_NAME} && npm ci --production && rm package.json package-lock.json && zip -qr ../${ZIP_NAME}.zip . && cd .. && rimraf ${ZIP_NAME}",
    "tools-setup": "echo 'nothing to do for now'"
  },
  "dependencies": {
    "@aws-sdk/client-eventbridge": "^3.577.0",
    "@aws-sdk/util-dynamodb": "^3.577.0",
    "@dvsa/cvs-type-definitions": "^7.2.0",
    "aws-lambda": "^1.0.7",
    "dateformat": "^5.0.3",
    "joi": "^17.13.1",
    "luxon": "^3.4.4",
    "winston": "^3.13.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@dvsa/eslint-config-ts": "^3.0.1",
    "@types/aws-lambda": "^8.10.138",
    "@types/jest": "^29.5.12",
    "@types/luxon": "^3.4.2",
    "@types/node": "^20.12.12",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^7.10.0",
    "@typescript-eslint/parser": "^7.10.0",
    "aws-sdk-client-mock": "^4.0.0",
    "commitlint-plugin-function-rules": "^4.0.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^28.5.0",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.2.5",
    "rimraf": "^5.0.7",
    "semantic-release": "^23.1.1",
    "serverless": "^3.22.0",
    "serverless-offline": "^13.6.0",
    "serverless-offline-aws-eventbridge": "^2.1.0",
    "serverless-plugin-typescript": "^2.1.5",
    "sonar-scanner": "^3.1.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.3",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5"
  },
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dvsa/cvs-svc-template/issues"
  },
  "homepage": "https://github.com/dvsa/cvs-svc-template#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/dvsa/cvs-svc-template.git"
  },
  "keywords": [
    "DVLA",
    "DVSA",
    "CVS",
    "Template",
    "TRL",
    "VRM",
    "MOT"
  ]
}
